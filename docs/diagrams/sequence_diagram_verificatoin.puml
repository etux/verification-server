@startuml
autonumber

actor User

participant Bot

participant VerificationServer as VS
database VerificationDataStore as VSDS

participant Web
participant Verifier
participant WebRTC

User -> Bot: Request verification
note right
- user identification
- language
- supported channels (conversation)
- supports details registration (if not: accessible URL to see details)
endnote
alt request not valid (several reasons)
    Bot -> User: Invalid request
else request trusted (with user idenntifier available)
    Bot -> VS: Creates verification session
    VS -> VSDS: Stores verification session
    alt verification allows registering details in our datastore
        VS -> Bot: Send verification details request
        Bot -> User: Sends detail request
        User -> Web: Provides verification details
        Web -> VS: Submit verification details
        VS -> VSDS: Stores verification details
    else verification does not allow registering details
        VS -> URL: Access details to check existence
        VS -> VSDS: Store access details
    end
    VS -> Verifier: Request verification conversation (providing options)
    Verifier -> VS: Creates verification conversation with preferred option (e.g. WebRTC)
    note right
    Verifier can be a verified volunteer
    behind a web cam but can also be a machine
    offering a verification API
    endnote
    Verifier -> VS: Sends verification conversation details
    VS -> Bot: Request user availability for verification
    Bot -> User: Request user availability
    alt user available
        User -> Bot: Accepts verification conversation
        Bot -> VS: Adds user to conversation
        VS -> Verifier: Sends verification details access
        Verifier -> Web: Access verification details
        Web -> VS: Access verification details
        VS -> VSDS: Audits access to the verification details
        alt Verifier uses WebRTC
            VS -> WebRTC: Create channel for verification conversation
            WebRTC -> VS: Return conversation channel details
        else verifier uses other means
            VS -> Unknown: Create channel for verification conversation
            Unknown -> VS: Return conversation channel details
            note left
            Verifier could decide to use other
            means to have a conversation, such as:
            Telegram
            ...
            endnote
        end
        VS -> Verifier: Sends conversation details
        VS -> Bot: Sends conversation details
        Bot -> User: Send message with conversation link
        alt Verifier uses WebRTC
            Verifier -> WebRTC: Join Room
            User -> WebRTC: Join Room
        else Verifier uses other means
            Verifier -> Unknown: Join channel
            User -> Unknown: Join channel
        end
        Verifier -> VS: Send verification result
        VS -> VSDS: Stores verification result (audited)
        VS -> Bot: Send verification result
        note right
        Verification result may include
        VS private key signed message
        including own generated identifier
        used to consult identity of the User
        (Can be transformed in a QRCode)
        endnote
        Bot -> User: Send verification result
    else user not available (or does not respond in x time)
        Bot -> VS: User not available
        VS -> Verifier: suspends verification
    else user rejects verification
        User -> Bot: Rejects verification call
        Bot -> VS: calls off verification
        VS -> Verifier: terminates verification
    end
end

@enduml